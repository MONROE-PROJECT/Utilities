From 8625d8b3ac8ff3d78afcc5fb958e05ad24301e28 Mon Sep 17 00:00:00 2001
From: Kristian Evensen <kristian.evensen@gmail.com>
Date: Thu, 14 Jul 2016 15:09:51 +0200
Subject: [PATCH] Random MAC fix cdc_ether

Need RX fixup due to crappy behavior

Error check

Style

Error

Typo

Blabla

Blabla

Blabla

Blabla

Fixfixfix

Ops, ordering

Blabla

Blabla

Bug

Blabla

Style thing

Remove debug
---
 drivers/net/usb/cdc_ether.c | 52 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 52 insertions(+)

diff --git a/drivers/net/usb/cdc_ether.c b/drivers/net/usb/cdc_ether.c
index 7cba2c3..b679014 100644
--- a/drivers/net/usb/cdc_ether.c
+++ b/drivers/net/usb/cdc_ether.c
@@ -428,10 +428,46 @@ int usbnet_cdc_bind(struct usbnet *dev, struct usb_interface *intf)
 		return status;
 	}
 
+	if (dev->net->dev_addr[0] & 0x02)
+		eth_hw_addr_random(dev->net);
+
 	return 0;
 }
 EXPORT_SYMBOL_GPL(usbnet_cdc_bind);
 
+/* Make sure packet have correct destination MAC address
+ *
+ * A firmware bug observed on some devices (ZTE MF910, MF823) is that the device
+ * sends packets with a static, bogus, random MAC address (event if device
+ * address has been updated). Always set MAC address to that of the device.
+ */
+static const u8 buggy_zte_hwaddrs[][ETH_ALEN] = {
+	{0x36, 0x4b, 0x50, 0xb7, 0xef, 0x38},
+	{0x36, 0x4b, 0x50, 0xb7, 0xef, 0xda}
+};
+
+static int usbnet_zte_cdc_rx_fixup(struct usbnet *dev, struct sk_buff *skb)
+{
+	u8 num_buggy_hwaddrs;
+	u8 buggy_hwaddrs_idx = 0;
+
+	if (skb->len < ETH_HLEN || !(skb->data[0] & 0x02))
+		return 1;
+
+	num_buggy_hwaddrs = sizeof(buggy_zte_hwaddrs) / ETH_ALEN;
+
+	skb_reset_mac_header(skb);
+
+	for (buggy_hwaddrs_idx = 0; buggy_hwaddrs_idx < num_buggy_hwaddrs;
+		 buggy_hwaddrs_idx++) {
+		if (ether_addr_equal(eth_hdr(skb)->h_dest,
+				     buggy_zte_hwaddrs[buggy_hwaddrs_idx]))
+			ether_addr_copy(eth_hdr(skb)->h_dest, dev->net->dev_addr);
+	}
+
+	return 1;
+}
+
 static const struct driver_info	cdc_info = {
 	.description =	"CDC Ethernet Device",
 	.flags =	FLAG_ETHER | FLAG_POINTTOPOINT,
@@ -442,6 +478,17 @@ static const struct driver_info	cdc_info = {
 	.manage_power =	usbnet_manage_power,
 };
 
+static const struct driver_info	zte_cdc_info = {
+	.description =	"ZTE CDC Ethernet Device",
+	.flags =	FLAG_ETHER | FLAG_POINTTOPOINT,
+	.bind =		usbnet_cdc_bind,
+	.unbind =	usbnet_cdc_unbind,
+	.status =	usbnet_cdc_status,
+	.set_rx_mode =	usbnet_cdc_update_filter,
+	.manage_power =	usbnet_manage_power,
+	.rx_fixup = usbnet_zte_cdc_rx_fixup,
+};
+
 static const struct driver_info wwan_info = {
 	.description =	"Mobile Broadband Network Device",
 	.flags =	FLAG_WWAN,
@@ -707,6 +754,11 @@ static const struct usb_device_id	products[] = {
 			USB_CDC_SUBCLASS_ETHERNET, USB_CDC_PROTO_NONE),
 	.driver_info = (kernel_ulong_t)&wwan_info,
 }, {
+	/* Several ZTE cdc ether devices need rx fixup due to buggy MAC */
+	USB_VENDOR_AND_INTERFACE_INFO(ZTE_VENDOR_ID, USB_CLASS_COMM,
+				      USB_CDC_SUBCLASS_ETHERNET, USB_CDC_PROTO_NONE),
+	.driver_info = (unsigned long)&zte_cdc_info,
+}, {
 	USB_INTERFACE_INFO(USB_CLASS_COMM, USB_CDC_SUBCLASS_ETHERNET,
 			USB_CDC_PROTO_NONE),
 	.driver_info = (unsigned long) &cdc_info,
-- 
2.5.0

