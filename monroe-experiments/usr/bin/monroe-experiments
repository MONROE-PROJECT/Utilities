#!/bin/bash

# TODO: move these to /etc/default
BASEDIR=/experiments/monroe/
URL_PING=monroe1.cs.kau.se:5000/monroe/ping
URL_METADATA=monroe1.cs.kau.se:5000/monroe/metadata-subscriber

REPO=rsync@repo.monroe-system.eu
KEY=/etc/keys/repo.monroe-system.eu
SSH="ssh -i $KEY -p 2280 -o ConnectTimeout=30"
TODIR="/experiments/monroe"

RSYNC_PARMS="-r --include '*/' --include '*.json' --exclude '*' --prune-empty-dirs"
RSYNC_ALL="$RSYNC_PARMS -e '$SSH' --remove-source-files --stats --timeout=30 $BASEDIR $REPO:$TODIR"
RSYNC_LS="rsync --ignore-missing-args $RSYNC_PARMS"

function mk_disk {
  mkdir -p $BASEDIR/$1
  if mountpoint -q $BASEDIR/$1; then
    echo "$1 outdir is mounted";
  else
    mkdir -p $BASEDIR/$1;
    if [ -f $BASEDIR/$1.disk ]; then
      echo "$1 disk image exists";
    else
      dd if=/dev/zero of=$BASEDIR/$1.disk bs=100000000 count=1;
      mkfs $BASEDIR/$1.disk;
    fi;
    mount -o loop $BASEDIR/$1.disk $BASEDIR/$1;
  fi
}

function merge {
  ALLFILES=$(find $1 -type f -name \*.json)
  TMPMERGEFILE=$(mktemp --tmpdir=$1)
  FILECOUNT=$(echo ${ALLFILES} |grep -o '.json'|wc -l)
  if [ $FILECOUNT -ge 2 ]; then
    base=$(echo ${ALLFILES} | cut -f 1-2 -d . | rev |  cut -d / -f 1 | rev)
    MERGEDFILE="$1/${base}_merged_$(date +%s).json"
    cat ${ALLFILES} >> ${TMPMERGEFILE} &&
    mv ${TMPMERGEFILE} ${MERGEDFILE} &&
    rm ${ALLFILES}                &&  # only if successful
    logger -t monroe-experiments "Appended $FILECOUNT files to ${MERGEDFILE}"
  fi;
}

##############################################################################

mk_disk "ping";
mk_disk "metadata";

for IF in "usb0" "usb1" "usb2" "wwan0" "eth0"; do
  if [ -z "$(docker ps --no-trunc|grep $URL_PING|grep $IF)" ]; then
    docker pull $URL_PING 2> /dev/null;
    docker run -d --net=host -v $BASEDIR/ping:/outdir -v /etc/nodeid:/nodeid:ro $URL_PING $IF;
  fi;
done

if [ -z "$(docker ps --no-trunc|grep $URL_METADATA)" ]; then
  docker pull $URL_METADATA 2> /dev/null;
  docker run -d --net=host -v $BASEDIR/metadata:/outdir -v /etc/nodeid:/nodeid:ro $URL_METADATA;
fi

echo "Starting rsync of $($RSYNC_LS $BASEDIR | grep json | wc -l) source files to $REPO...";
if eval "rsync $RSYNC_ALL"; then
  echo "rsync done, $($RSYNC_LS $BASEDIR | grep json | wc -l) files arrived while syncing.";
else
  logger -t monroe-experiments "Copying experiment data failed.";
  merge $BASEDIR/ping;
  merge $BASEDIR/metadata;
fi
