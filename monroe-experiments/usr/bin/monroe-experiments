#!/bin/bash
set -e

export PATH=/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
PING_TARGET=193.10.227.25 # may be overwritten by defaults

. /etc/default/monroe-experiments

function mk_disk {
  mkdir -p $BASEDIR/$1
  if mountpoint -q $BASEDIR/$1; then
    echo "$1 outdir is mounted."
  else
    MNTPNT=""
    if [ -b /dev/vg-monroe/cont-$1 ]; then
      echo "logical volume exists on vg-monroe";
      MNTPNT=/dev/vg-monroe/cont-$1
    elif [ -b /dev/Monroe-X-vg/cont-$1 ]; then
      echo "logical volume exists on Monroe-X-vg (deprecated)";
      MNTPNT=/dev/Monroe-X-vg/cont-$1
    else
      mkdir -p $BASEDIR/$1
      if [ $(lvcreate -L 100M vg-monroe -n cont-$1) ]; then
        MNTPNT=/dev/vg-monroe/cont-$1
      elif [ $(lvcreate -L 100M Monroe-X-vg -n cont-$1) ]; then
        MNTPNT=/dev/Monroe-X-vg/cont-$1 
      else 
        if [ ! -f $BASEDIR/$1.disk ]; then
          dd if=/dev/zero of=$BASEDIR/$1.disk bs=100000000 count=1
        fi
        MNTPNT=$BASEDIR/$1.disk 
      fi
    fi;
    if [ -z "$(file -sL $MNTPNT | grep ext4)" ]; then 
      mkfs.ext4 $MNTPNT -F -L $1
    fi
    mount -t ext4 $MNTPNT $BASEDIR/$1
  fi
}

function ifnum {
  echo $1 | sed -e 's/\([^0-9]\+\)\([0-9]\+\)/\2-\1/g' \
    -e 's/-wwan/1/g' \
    -e 's/-ppp/2/g' \
    -e 's/-eth/3/g' \
    -e 's/-usb/4/g' \
    -e 's/-wlan/5/g' \
    -e 's/^0*//g'
}

##############################################################################

MAINTENANCE=$(cat /monroe/maintenance/enabled || echo 0)
if [ $MAINTENANCE -eq 1 ]; then
  docker stop -t 0 $(docker ps -q) || true;
  logger -t monroe-experiments "system in maintenance mode.";
  exit 1
fi

if [ ! -f "$KEY" ]; then
  logger -t monroe-experiments "repository key does not exist.";
  exit 1;
fi

exec 42>/var/lock/monroe-experiments.lock
flock -n 42 || {
  logger -t monroe-experiments "lock file present";
  LOCKAGE=$(cat /tmp/monroe-experiments.last || echo 0)
  if (( $(date +%s) - $LOCKAGE > 600 )); then
    rm /var/lock/monroe-experiments.lock;
  fi
  exit 1;
}
trap "flock -u 42" EXIT


mk_disk "ping";
mk_disk "metadata";
mk_disk "mplane";
mk_disk "tstat";

for CONTAINER in $(docker ps -aq); do
  IMAGEID=$(docker inspect --format '{{.Image}}' $CONTAINER)
  if [ "$(docker inspect --format='{{.State.Running}}' $CONTAINER)" == "false" ]; then
    # remove stale containers, unless they are user experiments
    if [[ ! "$(docker inspect --format '{{.Config.Image}}' $CONTAINER)" == "monroe-"* ]]; then
      docker rm $CONTAINER || true;
    fi;
  else
    # stop and remove running containers, if their images have been untagged (updated)
    if [[ "$(docker inspect --format '{{.RepoTags}}' $IMAGEID)" == "[]" ]]; then 
      docker stop -t 0 $CONTAINER || true;
      docker rmi -f $IMAGEID || true;
    fi;
  fi;
done
# clean stale images
docker rmi $(docker images -a|grep '<none>'|awk "{print \$3}") 2>/dev/null || true

MNS="ip netns exec monroe";

CID=$(docker ps --no-trunc | grep $URL_NOOP | awk '{print $1}' | head -n 1)

if [ ! -e /var/run/netns/monroe ] || [ -z "$CID" ]; then
  # stop any running containers
  if [ ! -z "$CID" ]; then
    docker stop -t 0 $CID;
  fi
  # stop any multi client running in that namespace
  pgrep -f multi-netns-monroe | xargs -r kill

  docker run -d --net=bridge $URL_NOOP;
  CID=$(docker ps --no-trunc | grep $URL_NOOP | awk '{print $1}' | head -n 1)
  PID=$(docker inspect -f '{{.State.Pid}}' $CID)
  mkdir -p /var/run/netns;
  rm /var/run/netns/monroe 2>/dev/null || true;
  ln -s /proc/$PID/ns/net /var/run/netns/monroe;

  # rename the docker bridge interface 'eth0' to 'metadata'
  IP=$($MNS ip route | tail -n 1 | awk '{print $NF}')
  $MNS ip link set dev eth0 down;
  $MNS ip link set eth0 name metadata;
  $MNS ip link set dev metadata up;
  $MNS ip a add $IP dev metadata;

  logger -t monroe-experiments "Started noop container and monroe netns."
fi

if [ ! -e /var/run/netns/monroe ]; then
  logger -t monroe-experiments "Network namespace is missing.";
  exit 1;
fi

if [ -z "$(ps ax|grep multi|grep netns-monroe)" ]; then
  logger -t monroe-experiments "multi is not started, restarting.";
  $MNS multi_client -d -c /etc/multi-netns-monroe.yaml;
fi

CID=$(docker ps --no-trunc | grep $URL_NOOP | awk '{print $1}' | head -n 1)

INTERFACES="usb0 usb1 usb2 wlan0 eth0";
INTERFACES_BR=$(modems | jq -r .[].ifname)
INTERFACES_PING="op0 op1 op2";

for IF in $INTERFACES_BR; do
  OP=$(usb2op $IF) || continue
  if [ -z "$(ip link|grep $IF)" ]; then
    $MNS ip link del $OP 2>/dev/null || true;
    # TODO: del bridge
    continue;
  fi
  if [ ! -z "$(ip link|grep 'state DOWN'|grep $IF)" ]; then
    $MNS ip link set $OP down 2>/dev/null || true;
    continue;
  fi
  if [ ! -z "$($MNS ip link|grep $OP)" ]; then
    $MNS ip link set $OP up;
    continue;
  fi
  if [ -z "$(ip link|grep ${IF}Br)" ]; then
    IFNUM=$(ifnum $IF)
    ip link add ${IF}Br type veth peer name $OP;
    ip link set $OP netns monroe;
    brctl addbr bridge$IF;
    ip addr add 172.18.${IFNUM}.1/24 dev bridge$IF;
    ip link set dev bridge$IF up;
    brctl addif bridge$IF ${IF}Br;
    ip link set ${IF}Br up;

  fi
  
done

NODEID=$(cat /etc/nodeid)

for IF in $INTERFACES_PING; do
  if [ ! -z "$($MNS ip link|grep $IF)" ]; then
    if [ -z "$(docker ps --no-trunc|grep $URL_PING|grep $IF)" ]; then
      COUNT=$(cat $BASEDIR/ping.counter 2>/dev/null || echo 0)
      COUNT=$(($COUNT + 1))
      echo $COUNT > $BASEDIR/ping.counter

      IMAGEID=$(docker images -q --no-trunc $URL_PING|head -n 1)
      
      echo "{\"nodeid\":\"$NODEID\", \
             \"guid\":\"$IMAGEID.0.$NODEID.$COUNT\", \
             \"server\":\"$PING_TARGET\", \
             \"interfacename\": \"$IF\"}" > $BASEDIR/ping.$IF.conf

      rm $BASEDIR/ping/tmp* || true;
      docker run -d --net=container:$CID -v $BASEDIR/ping:/monroe/results -v /etc/nodeid:/nodeid:ro -v $BASEDIR/ping.$IF.conf:/monroe/config:ro $URL_PING $IF || true;
      logger -t monroe-experiments "started ping container on $IF.";
    fi;
  fi;
done

if [ -z "$(docker ps --no-trunc|grep $URL_METADATA)" ]; then
  echo "{\"nodeid\":\"$NODEID\"}" > $BASEDIR/metadata.conf
  rm $BASEDIR/metadata/tmp* || true;
  docker run -d --net=container:$CID -v $BASEDIR/metadata:/monroe/results -v /etc/nodeid:/nodeid:ro -v $BASEDIR/metadata.conf:/monroe/config:ro $URL_METADATA || true;
  logger -t monroe-experiments "started metadata container.";
fi

if [ -z "$(docker ps --no-trunc|grep $URL_MPLANE)" ]; then
  mkdir -p $BASEDIR/tstat # shared folder for tstat results
  rm $BASEDIR/mplane/tmp* || true;
  docker run -d --net=container:$CID \
             -v $BASEDIR/mplane:/monroe/results \
             -v $BASEDIR/tstat:/monroe/tstat    \
             -v /etc/nodeid:/nodeid:ro \
             $URL_MPLANE || true;
  logger -t monroe-experiments "started mplane container.";
fi

monroe-rsync-results     || true
monroe-user-experiments  || true

echo $(date +%s) > /tmp/monroe-experiments.last
