#!/bin/bash
set -e

export PATH=/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

. /etc/default/monroe-experiments

# do not run rsync if a user experiment is running
experiments && exit 1

SSH="ssh -i $KEY -p 2280 -oStrictHostKeyChecking=no -o ConnectTimeout=30"
USER_RSYNC_PARMS="-r -z --prune-empty-dirs"
USER_RSYNC="$USER_RSYNC_PARMS --stats -e '$SSH' --timeout=30"

for f in $USERDIR/*; do
  if [ ! -d "$f" ]; then continue; fi

  echo "Syncing $f"
  SCHEDID=$(basename "$f")
  STATS=$(eval "rsync $USER_RSYNC $f/ $USER_REPO:$USER_TODIR/$SCHEDID")
  SENT=$(echo "$STATS"|grep 'sent:'|sed -e 's/.*: //g')
  RECV=$(echo "$STATS"|grep 'received:'|sed -e 's/.*: //g')
  TOTAL=$((${SENT//,} + ${RECV//,}))

  echo "$SENT sent, $RECV received, $TOTAL total."

  if [ -f "$USERDIR/$SCHEDID.traffic" ]; then
    TRAFFIC=$(cat $USERDIR/$SCHEDID.traffic)
    RESULTS=$(echo $TRAFFIC | jq -r '.results // 0')
    # skip on empty files and parsing errors
    if [ $? -gt 0 ] || [ -z "$TRAFFIC" ]; then
      logger -t monroe-user-experiments "Error parsing traffic report $SCHEDID ($TRAFFIC)";
      continue;
    fi

    RESULTS=$(( $RESULTS + $TOTAL ))
    UPDATE=$(echo $TRAFFIC | jq ".results=$RESULTS")
    if [ ! -z "$UPDATE" ]; then
      echo "$UPDATE" > $USERDIR/$SCHEDID.traffic
    else
      logger -t monroe-user-experiments "Error updating traffic report $SCHEDID from values ($TOTAL, $RESULTS, $UPDATE, $TRAFFIC)"
    fi

    if [ -f "$USERDIR/$SCHEDID.conf" ]; then
      QUOTA=$(cat $USERDIR/$SCHEDID.conf | jq -r '.storage // 0')
      DEPLOY=$(echo $TRAFFIC | jq -r '.deployment // 0')

      if [ "$(($RESULTS + $DEPLOY))" -gt "$QUOTA" ]; then
        docker stop -t 0 monroe-$SCHEDID;
        echo "storage quota exceeded." >> /experiments/user/$SCHEDID/container.stat
        echo "failed; storage quota exceeded" > /experiments/user/$SCHEDID.status
      fi
    fi
  else 
    # the container has been stopped already, unmount and remove the directory
    rm -r  $USERDIR/$SCHEDID/* || true
    umount $USERDIR/$SCHEDID   || true
    rmdir  $USERDIR/$SCHEDID   || true
  fi

done

mkdir -p $USERDIR
touch $USERDIR/.keep
find $USERDIR -depth -type d -empty -delete
