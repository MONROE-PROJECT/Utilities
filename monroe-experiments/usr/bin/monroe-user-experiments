#!/bin/bash
set -e

export PATH=/usr/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

. /etc/default/monroe-experiments

SSH="ssh -i $KEY -p 2280 -oStrictHostKeyChecking=no -o ConnectTimeout=30"
USER_RSYNC_PARMS="-r -z --prune-empty-dirs"
USER_RSYNC="$USER_RSYNC_PARMS --stats -e '$SSH' --remove-source-files --timeout=30"

for f in $USERDIR/*; do
  if [ ! -d "$f" ]; then continue; fi

  echo "Syncing $f"
  SCHEDID=$(basename "$f")
  STATS=$(eval "rsync $USER_RSYNC $f/ $USER_REPO:$USER_TODIR/$SCHEDID")
  SENT=$(echo "$STATS"|grep 'sent:'|sed -e 's/.*: //g')
  RECV=$(echo "$STATS"|grep 'received:'|sed -e 's/.*: //g')
  TOTAL=$(($SENT + $RECV))

  echo "$SENT sent, $RECV received, $TOTAL total."

  if [ -f "$USERDIR/$SCHEDID.traffic" ]; then
    TRAFFIC=$(cat $USERDIR/$SCHEDID.traffic)
    RESULTS=$(echo $TRAFFIC | jq -r '.results // 0')
    RESULTS=$(( $RESULTS + $TOTAL ))
    echo $TRAFFIC | jq ".results=$RESULTS" > $USERDIR/$SCHEDID.traffic

    if [ -f "$USERDIR/$SCHEDID.conf" ]; then
      QUOTA=$(cat $USERDIR/$SCHEDID.conf | jq -r '.storage // 0')
      DEPLOY=$(echo $TRAFFIC | jq -r '.deployment // 0')

      if [ "$(($RESULTS + $DEPLOY))" -gt "$QUOTA" ]; then
        docker stop -t 0 monroe-$SCHEDID;
        echo "storage quota exceeded." >> /experiments/user/$SCHEDID/container.stat
        echo "failed; storage quota exceeded" > /experiments/user/$SCHEDID.status
      fi
    fi
  fi

done

mkdir -p $USERDIR
touch $USERDIR/.keep
find $USERDIR -depth -type d -empty -delete
